[{"C:\\Users\\user\\Desktop\\website\\src\\index.jsx":"1","C:\\Users\\user\\Desktop\\website\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\website\\src\\App.jsx":"3","C:\\Users\\user\\Desktop\\website\\src\\components\\Navbar\\Navbar.jsx":"4","C:\\Users\\user\\Desktop\\website\\src\\components\\Navbar\\styles.js":"5","C:\\Users\\user\\Desktop\\website\\src\\components\\index.js":"6","C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\Products.jsx":"7","C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\Product\\Product.jsx":"8","C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\Product\\styles.jsx":"9","C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\styles.js":"10","C:\\Users\\user\\Desktop\\website\\src\\lib\\commerce.js":"11","C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\Cart.jsx":"12","C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\styles.js":"13","C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\CartItem\\CartItem.jsx":"14","C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\CartItem\\styles.js":"15","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"16","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\Checkout\\styles.js":"17","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\PaymetForm.jsx":"19","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\FormInput.jsx":"20","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\Review.jsx":"21"},{"size":478,"mtime":1607188471716,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2361,"mtime":1607733310563,"results":"25","hashOfConfig":"23"},{"size":1378,"mtime":1607298492089,"results":"26","hashOfConfig":"23"},{"size":1565,"mtime":1606580861000,"results":"27","hashOfConfig":"23"},{"size":233,"mtime":1607445057136,"results":"28","hashOfConfig":"23"},{"size":722,"mtime":1607211397041,"results":"29","hashOfConfig":"23"},{"size":1337,"mtime":1607211806130,"results":"30","hashOfConfig":"23"},{"size":415,"mtime":1607195159520,"results":"31","hashOfConfig":"23"},{"size":287,"mtime":1606580861000,"results":"32","hashOfConfig":"23"},{"size":127,"mtime":1607206933731,"results":"33","hashOfConfig":"23"},{"size":1919,"mtime":1607443903648,"results":"34","hashOfConfig":"23"},{"size":570,"mtime":1606580861000,"results":"35","hashOfConfig":"23"},{"size":1305,"mtime":1607300764641,"results":"36","hashOfConfig":"23"},{"size":333,"mtime":1606580861000,"results":"37","hashOfConfig":"23"},{"size":4666,"mtime":1607733046064,"results":"38","hashOfConfig":"23"},{"size":1158,"mtime":1606580861000,"results":"39","hashOfConfig":"23"},{"size":5078,"mtime":1607561714993,"results":"40","hashOfConfig":"23"},{"size":2733,"mtime":1607731508371,"results":"41","hashOfConfig":"23"},{"size":460,"mtime":1607730730378,"results":"42","hashOfConfig":"23"},{"size":1055,"mtime":1607644597919,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pr4npu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\user\\Desktop\\website\\src\\index.jsx",[],["90","91"],"C:\\Users\\user\\Desktop\\website\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\website\\src\\App.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\index.js",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\Product\\styles.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Products\\styles.js",[],"C:\\Users\\user\\Desktop\\website\\src\\lib\\commerce.js",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\styles.js",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["92"],"import React, { useState, useEffect } from 'react';\r\nimport { Paper, Step, StepLabel, Stepper, Typography, Divider, Button, CircularProgress, CssBaseline } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymetForm';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst steps = ['Shipping Address', 'Payment Details'];\r\n\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id,{ type: 'cart' });\r\n\r\n                setCheckoutToken(token);\r\n            } catch (error) {\r\n                history.pushState('/');\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n           setIsFinished(true) \r\n        }, 3000)\r\n    }\r\n\r\n\r\n// with CC\r\n//     let Confirmation = () => (order.customer ? (\r\n//     <>\r\n//       <div>\r\n//         <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n//         <Divider className={classes.divider} />\r\n//         <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n//       </div>\r\n//       <br />\r\n//       <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n//     </>\r\n//   ) : (\r\n//     <div className={classes.spinner}>\r\n//       <CircularProgress />\r\n//     </div>\r\n//   ));\r\n\r\n//   if (error) {\r\n//     Confirmation = () => (\r\n//       <>\r\n//         <Typography variant=\"h5\">Error: {error}</Typography>\r\n//         <br />\r\n//         <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n\r\n// WITHOUT CC\r\n    let Confirmation = () => (order.customer ? (\r\n    <>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </>\r\n  ) : isFinished ? (\r\n          <>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase!</Typography>\r\n        <Divider className={classes.divider} />\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </>\r\n\r\n  ) : (\r\n    <div className={classes.spinner}>\r\n      <CircularProgress />\r\n    </div>\r\n  ));\r\n\r\n  if (error) {\r\n      <>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n      </>\r\n  }\r\n\r\n\r\n    const Form = () => activeStep === 0\r\n    ? <AddressForm checkoutToken={checkoutToken} next={next} /> \r\n    : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <div className={classes.toolbar}></div>\r\n        <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                <Stepper activeStep={0} className={classes.stepper}>\r\n                    {steps.map((step) => (\r\n                        <Step key={step}>\r\n                            <StepLabel>{step}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n            </Paper>\r\n        </main>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\AddressForm.jsx",["93","94"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Grid, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './FormInput';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id:code, label:name}));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id:code, label:name}));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }));\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutToken, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutToken, { country, region });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       if(shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry])\r\n\r\n    useEffect(() => {\r\n       if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n         <Typography variant=\"h6\" gutterBottom>Shippin Address</Typography>\r\n         <FormProvider {...methods}>\r\n             <form onSubmit={methods.handleSubmit((data) => next({ ...data , setShippingCountry, shippingSubdivision, setShippingOption}))}>\r\n                 <Grid container spacing={3}>\r\n                    <FormInput name='firstName' label='First Name' />\r\n                    <FormInput name='lastName' label='Last Name' />\r\n                    <FormInput name='address' label='Address' />\r\n                    <FormInput name='email' label='Email' />\r\n                    <FormInput name='city' label='City' />\r\n                    <FormInput name='zip' label='ZIP / Postal Code' />\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Country</InputLabel>\r\n                        <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                           {countries.map((country) => (\r\n                            <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\r\n                           ))} \r\n                        </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Subdivision</InputLabel>\r\n                        <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                           {subdivisions.map((subdivision) => (\r\n                            <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\r\n                           ))} \r\n                        </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputLabel>Shipping Options</InputLabel>\r\n                        <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                           {options.map((option) => (\r\n                            <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\r\n                           ))} \r\n                        </Select>\r\n                    </Grid>\r\n\r\n                 </Grid>\r\n                 <br/>\r\n                 <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                     <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                     <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                 </div>\r\n             </form>\r\n         </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm;","C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\PaymetForm.jsx",[],"C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\FormInput.jsx",[],["95","96"],"C:\\Users\\user\\Desktop\\website\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":34,"column":8,"nodeType":"103","endLine":34,"endColumn":14,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":46,"column":8,"nodeType":"103","endLine":46,"endColumn":10,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":54,"column":8,"nodeType":"103","endLine":54,"endColumn":29,"suggestions":"108"},{"ruleId":"97","replacedBy":"109"},{"ruleId":"99","replacedBy":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["115"],["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [cart, history]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"124","text":"125"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"126","text":"127"},[1204,1210],"[cart, history]",[2095,2097],"[checkoutToken.id]",[2359,2380],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]